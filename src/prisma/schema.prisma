generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model board {
  id             Int       @id @default(autoincrement())
  user_id        Int?
  category_id    Int?
  board_title    String?   @db.VarChar(255)
  board_contents String?   @db.VarChar(255)
  creatred_at    DateTime  @default(now()) @db.DateTime(0)
  updated_at     DateTime? @db.DateTime(0)
  category       category? @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_board_category_id_category_id")
  user           user?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_board_user_id_user_id")
  comment        comment[]
  view           view[]

  @@index([category_id], map: "fk_board_category_id_category_id")
  @@index([user_id], map: "fk_board_user_id_user_id")
}

model category {
  id       Int     @id @default(autoincrement())
  category String? @db.VarChar(255)
  board    board[]
}

model comment {
  id                       Int       @id @default(autoincrement())
  user_id                  Int?
  board_id                 Int?
  comment                  String?   @db.VarChar(255)
  cdepth                   Int?      @default(0)
  parent_id                Int?
  creatred_at              DateTime  @default(now()) @db.DateTime(0)
  updated_at               DateTime? @db.DateTime(0)
  user                     user?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_ibfk_1")
  board                    board?    @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_ibfk_2")
  comment_commentTocomment comment?  @relation("commentTocomment", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_ibfk_3")
  other_comment            comment[] @relation("commentTocomment")

  @@index([board_id], map: "board_id")
  @@index([parent_id], map: "parent_id")
  @@index([user_id], map: "user_id")
}

model user {
  id         Int       @id @default(autoincrement())
  nick_name  String?   @db.VarChar(255)
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  board      board[]
  comment    comment[]
  view       view[]
}

model view {
  id       Int    @id @default(autoincrement())
  user_id  Int?
  board_id Int?
  board    board? @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "view_ibfk_1")
  user     user?  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "view_ibfk_2")

  @@index([board_id], map: "board_id")
  @@index([user_id], map: "user_id")
}
